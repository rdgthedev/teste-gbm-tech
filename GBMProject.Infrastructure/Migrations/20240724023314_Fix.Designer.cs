// <auto-generated />
using System;
using GBMProject.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GBMProject.Infrastructure.Migrations
{
    [DbContext(typeof(GbmProjectDbContext))]
    [Migration("20240724023314_Fix")]
    partial class Fix
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.6.24327.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GBMProject.Core.Entities.Driver", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("DATETIME")
                        .HasColumnName("BirthDate");

                    b.Property<string>("Cel")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Celular");

                    b.Property<string>("CnhCategory")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("CnhCategory");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Cpf");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Cpf" }, "IX_Driver_Cpf");

                    b.HasIndex(new[] { "Id" }, "IX_Driver_Id");

                    b.ToTable("Driver", (string)null);
                });

            modelBuilder.Entity("GBMProject.Core.Entities.Truck", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Color");

                    b.Property<Guid>("DriverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Model");

                    b.Property<int>("NumberOfAxles")
                        .HasColumnType("INT")
                        .HasColumnName("NumberOfAxles");

                    b.Property<string>("Plate")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Plate");

                    b.HasKey("Id");

                    b.HasIndex("DriverId")
                        .IsUnique();

                    b.HasIndex(new[] { "Id" }, "IX_Truck_Id");

                    b.HasIndex(new[] { "Plate" }, "IX_Truck_Plate");

                    b.ToTable("Truck", (string)null);
                });

            modelBuilder.Entity("GBMProject.Core.Entities.Truck", b =>
                {
                    b.HasOne("GBMProject.Core.Entities.Driver", "Driver")
                        .WithOne("Truck")
                        .HasForeignKey("GBMProject.Core.Entities.Truck", "DriverId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Truck_DriverId");

                    b.Navigation("Driver");
                });

            modelBuilder.Entity("GBMProject.Core.Entities.Driver", b =>
                {
                    b.Navigation("Truck")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
